{
  "groups": [],
  "properties": [
    {
      "name": "spring.aop.auto",
      "type": "java.lang.Boolean",
      "description": "Add @EnableAspectJAutoProxy.",
      "defaultValue": true
    },
    {
      "name": "spring.aop.proxy-target-class",
      "type": "java.lang.Boolean",
      "description": "Whether subclass-based (CGLIB) proxies are to be created (true), as opposed to standard Java interface-based proxies (false).",
      "defaultValue": true
    },
    {
      "name": "spring.dao.exceptiontranslation.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable the PersistenceExceptionTranslationPostProcessor.",
      "defaultValue": true
    },
    {
      "name": "spring.data.couchbase.consistency",
      "type": "org.springframework.data.couchbase.core.query.Consistency",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.data.couchbase.repositories.type",
      "type": "org.springframework.boot.autoconfigure.data.RepositoryType",
      "description": "Type of Couchbase repositories to enable.",
      "defaultValue": "auto"
    },
    {
      "name": "spring.data.jdbc.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JDBC repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.r2dbc.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable R2DBC repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.redis.repositories.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Redis repositories.",
      "defaultValue": true
    },
    {
      "name": "spring.data.redis.ssl",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.data.redis.ssl.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.graphql.schema.file-extensions",
      "defaultValue": ".graphqls,.gqls"
    },
    {
      "name": "spring.graphql.schema.locations",
      "defaultValue": "classpath:graphql/**/"
    },
    {
      "name": "spring.http.encoding.charset",
      "type": "java.nio.charset.Charset",
      "description": "Charset of HTTP requests and responses. Added to the Content-Type header if not set explicitly.",
      "deprecation": {
        "replacement": "server.servlet.encoding.charset",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable http encoding support.",
      "defaultValue": true,
      "deprecation": {
        "replacement": "server.servlet.encoding.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.force",
      "type": "java.lang.Boolean",
      "description": "Whether to force the encoding to the configured charset on HTTP requests and responses.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "server.servlet.encoding.force",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.force-request",
      "type": "java.lang.Boolean",
      "description": "Whether to force the encoding to the configured charset on HTTP requests. Defaults to true when force has not been specified.",
      "defaultValue": true,
      "deprecation": {
        "replacement": "server.servlet.encoding.force-request",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.force-response",
      "type": "java.lang.Boolean",
      "description": "Whether to force the encoding to the configured charset on HTTP responses.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "server.servlet.encoding.force-response",
        "level": "error"
      }
    },
    {
      "name": "spring.http.encoding.mapping",
      "type": "java.util.Map<java.util.Locale,java.nio.charset.Charset>",
      "description": "Locale in which to encode mapping.",
      "deprecation": {
        "replacement": "server.servlet.encoding.mapping",
        "level": "error"
      }
    },
    {
      "name": "spring.http.log-request-details",
      "type": "java.lang.Boolean",
      "description": "Whether logging of (potentially sensitive) request details at DEBUG and TRACE level is allowed.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "spring.mvc.log-request-details",
        "level": "error"
      }
    },
    {
      "name": "spring.influx.password",
      "deprecation": {
        "level": "error",
        "reason": "The new InfluxDb Java client provides Spring Boot integration."
      }
    },
    {
      "name": "spring.influx.url",
      "deprecation": {
        "level": "error",
        "reason": "The new InfluxDb Java client provides Spring Boot integration."
      }
    },
    {
      "name": "spring.influx.user",
      "deprecation": {
        "level": "error",
        "reason": "The new InfluxDb Java client provides Spring Boot integration."
      }
    },
    {
      "name": "spring.jta.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JTA support.",
      "defaultValue": true
    },
    {
      "name": "spring.jta.narayana.default-timeout",
      "type": "java.time.Duration",
      "description": "Transaction timeout. If a duration suffix is not specified, seconds will be used.",
      "defaultValue": "60s",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.expiry-scanners",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of expiry scanners.",
      "defaultValue": [
        "com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner"
      ],
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.log-dir",
      "type": "java.lang.String",
      "description": "Transaction object store directory.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.one-phase-commit",
      "type": "java.lang.Boolean",
      "description": "Whether to enable one phase commit optimization.",
      "defaultValue": true,
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.periodic-recovery-period",
      "type": "java.time.Duration",
      "description": "Interval in which periodic recovery scans are performed. If a duration suffix is not specified, seconds will be used.",
      "defaultValue": "120s",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-backoff-period",
      "type": "java.time.Duration",
      "description": "Back off period between first and second phases of the recovery scan. If a duration suffix is not specified, seconds will be used.",
      "defaultValue": "10s",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-db-pass",
      "type": "java.lang.String",
      "description": "Database password to be used by the recovery manager.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-db-user",
      "type": "java.lang.String",
      "description": "Database username to be used by the recovery manager.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-jms-pass",
      "type": "java.lang.String",
      "description": "JMS password to be used by the recovery manager.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-jms-user",
      "type": "java.lang.String",
      "description": "JMS username to be used by the recovery manager.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.recovery-modules",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of recovery modules.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.transaction-manager-id",
      "type": "java.lang.String",
      "description": "Unique transaction manager id.",
      "defaultValue": "1",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.jta.narayana.xa-resource-orphan-filters",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of orphan filters.",
      "deprecation": {
        "level": "error",
        "reason": "Narayana support has moved to third party starter."
      }
    },
    {
      "name": "spring.reactor.stacktrace-mode.enabled",
      "description": "Whether Reactor should collect stacktrace information at runtime.",
      "defaultValue": false,
      "deprecation": {
        "replacement": "spring.reactor.debug-agent.enabled"
      }
    },
    {
      "name": "spring.redis.client-name",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.redis.client-name",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.client-type",
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType",
      "deprecation": {
        "replacement": "spring.data.redis.client-type",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.cluster.max-redirects",
      "type": "java.lang.Integer",
      "deprecation": {
        "replacement": "spring.data.redis.cluster.max-redirects",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.cluster.nodes",
      "type": "java.util.List<java.lang.String>",
      "deprecation": {
        "replacement": "spring.data.redis.cluster.nodes",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.connect-timeout",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.data.redis.connect-timeout",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.database",
      "type": "java.lang.Integer",
      "deprecation": {
        "replacement": "spring.data.redis.database",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.host",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.redis.host",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.jedis.pool.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.jedis.pool.max-active",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.jedis.pool.max-idle",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.jedis.pool.max-wait",
      "type": "java.time.Duration",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.jedis.pool.min-idle",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.jedis.pool.time-between-eviction-runs",
      "type": "java.time.Duration",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.cluster.refresh.adaptive",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.data.redis.lettuce.cluster.refresh.adaptive",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.cluster.refresh.dynamic-refresh-sources",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.data.redis.lettuce.cluster.refresh.dynamic-refresh-sources",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.cluster.refresh.period",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.data.redis.lettuce.cluster.refresh.period",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.pool.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.pool.max-active",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.pool.max-idle",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.pool.max-wait",
      "type": "java.time.Duration",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.pool.min-idle",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.pool.time-between-eviction-runs",
      "type": "java.time.Duration",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.redis.lettuce.shutdown-timeout",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.data.redis.lettuce.shutdown-timeout",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.password",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.redis.password",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.port",
      "type": "java.lang.Integer",
      "deprecation": {
        "replacement": "spring.data.redis.port",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.sentinel.master",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.redis.sentinel.master",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.sentinel.nodes",
      "type": "java.util.List<java.lang.String>",
      "deprecation": {
        "replacement": "spring.data.redis.sentinel.nodes",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.sentinel.password",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.redis.sentinel.password",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.sentinel.username",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.redis.sentinel.username",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.ssl",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.data.redis.ssl",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.timeout",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.data.redis.timeout",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.url",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.redis.url",
        "level": "error"
      }
    },
    {
      "name": "spring.redis.username",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.data.redis.username",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.add-mappings",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.add-mappings",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.cache-private",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.cache-private",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.cache-public",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.cache-public",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.max-age",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.max-age",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.must-revalidate",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.must-revalidate",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.no-cache",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.no-cache",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.no-store",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.no-store",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.no-transform",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.no-transform",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.proxy-revalidate",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.proxy-revalidate",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.s-max-age",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.s-max-age",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.stale-if-error",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.stale-if-error",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.cachecontrol.stale-while-revalidate",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.cachecontrol.stale-while-revalidate",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.period",
      "type": "java.time.Duration",
      "deprecation": {
        "replacement": "spring.web.resources.cache.period",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.cache.use-last-modified",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.cache.use-last-modified",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.cache",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.cache",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.compressed",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.compressed",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.gzipped",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.compressed",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.html-application-cache",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.content.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.content.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.content.paths",
      "type": "java.lang.String[]",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.content.paths",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.fixed.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.fixed.enabled",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.fixed.paths",
      "type": "java.lang.String[]",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.fixed.paths",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.chain.strategy.fixed.version",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.web.resources.chain.strategy.fixed.version",
        "level": "error"
      }
    },
    {
      "name": "spring.resources.static-locations",
      "type": "java.lang.String[]",
      "deprecation": {
        "replacement": "spring.web.resources.static-locations",
        "level": "error"
      }
    },
    {
      "name": "spring.security.filter.dispatcher-types",
      "defaultValue": [
        "async",
        "error",
        "forward",
        "include",
        "request"
      ]
    },
    {
      "name": "spring.security.filter.order",
      "defaultValue": -100
    },
    {
      "name": "spring.security.oauth2.resourceserver.jwt.jws-algorithm",
      "type": "java.lang.String",
      "deprecation": {
        "replacement": "spring.security.oauth2.resourceserver.jwt.jws-algorithms",
        "level": "error"
      }
    },
    {
      "name": "spring.session.redis.cleanup-cron",
      "defaultValue": "0 * * * * *"
    },
    {
      "name": "spring.session.servlet.filter-dispatcher-types",
      "defaultValue": [
        "async",
        "error",
        "request"
      ]
    },
    {
      "name": "spring.sql.init.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether basic script-based initialization of an SQL database is enabled.",
      "defaultValue": true,
      "deprecation": {
        "replacement": "spring.sql.init.mode",
        "level": "warning"
      }
    },
    {
      "name": "spring.webflux.hiddenmethod.filter.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Spring's HiddenHttpMethodFilter.",
      "defaultValue": false
    },
    {
      "name": "spring.webflux.multipart.streaming",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Replaced by the PartEventHttpMessageReader and the PartEvent API.",
        "level": "error"
      }
    },
    {
      "name": "spring.webservices.wsdl-locations",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of locations of WSDLs and accompanying XSDs to be exposed as beans."
    }
  ],
  "hints": [
    {
      "name": "spring.cache.jcache.provider",
      "providers": [
        {
          "name": "class-reference",
          "parameters": {
            "target": "javax.cache.spi.CachingProvider"
          }
        }
      ]
    },
    {
      "name": "spring.data.redis.lettuce.read-from",
      "values": [
        {
          "value": "any",
          "description": "Read from any node."
        },
        {
          "value": "any-replica",
          "description": "Read from any replica node."
        },
        {
          "value": "lowest-latency",
          "description": "Read from the node with the lowest latency during topology discovery."
        },
        {
          "value": "regex:",
          "description": "Read from any node that has RedisURI matching with the given pattern."
        },
        {
          "value": "replica",
          "description": "Read from the replica only."
        },
        {
          "value": "replica-preferred",
          "description": "Read preferred from replica and fall back to upstream if no replica is available."
        },
        {
          "value": "subnet:",
          "description": "Read from any node in the subnets."
        },
        {
          "value": "upstream",
          "description": "Read from the upstream only."
        },
        {
          "value": "upstream-preferred",
          "description": "Read preferred from the upstream and fall back to a replica if the upstream is not available."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.graphql.cors.allowed-headers",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.graphql.cors.allowed-methods",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.graphql.cors.allowed-origins",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.auto-offset-reset",
      "values": [
        {
          "value": "earliest",
          "description": "Automatically reset the offset to the earliest offset."
        },
        {
          "value": "latest",
          "description": "Automatically reset the offset to the latest offset."
        },
        {
          "value": "none",
          "description": "Throw exception to the consumer if no previous offset is found for the consumer's group."
        },
        {
          "value": "exception",
          "description": "Throw exception to the consumer."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.key-deserializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Deserializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.consumer.value-deserializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Deserializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.producer.key-serializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Serializer"
          }
        }
      ]
    },
    {
      "name": "spring.kafka.producer.value-serializer",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "org.apache.kafka.common.serialization.Serializer"
          }
        }
      ]
    },
    {
      "name": "spring.sql.init.data-locations",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.List<org.springframework.core.io.Resource>"
          }
        }
      ]
    },
    {
      "name": "spring.sql.init.schema-locations",
      "providers": [
        {
          "name": "handle-as",
          "parameters": {
            "target": "java.util.List<org.springframework.core.io.Resource>"
          }
        }
      ]
    },
    {
      "name": "spring.webflux.format.date",
      "values": [
        {
          "value": "dd/MM/yyyy",
          "description": "Example date format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local date format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.webflux.format.date-time",
      "values": [
        {
          "value": "yyyy-MM-dd HH:mm:ss",
          "description": "Example date-time format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local date-time format."
        },
        {
          "value": "iso-offset",
          "description": "ISO offset date-time format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.webflux.format.time",
      "values": [
        {
          "value": "HH:mm:ss",
          "description": "Example time format. Any format supported by DateTimeFormatter.parse can be used."
        },
        {
          "value": "iso",
          "description": "ISO-8601 extended local time format."
        },
        {
          "value": "iso-offset",
          "description": "ISO offset time format."
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    }
  ]
}
