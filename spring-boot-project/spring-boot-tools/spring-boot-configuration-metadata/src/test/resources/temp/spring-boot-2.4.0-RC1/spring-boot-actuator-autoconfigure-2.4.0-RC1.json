{
  "groups": [
    {
      "name": "management.endpoint.conditions",
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
    },
    {
      "name": "management.endpoint.configprops",
      "type": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
    },
    {
      "name": "management.endpoint.env",
      "type": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
    },
    {
      "name": "management.endpoint.health",
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
    },
    {
      "name": "management.endpoint.health.status",
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "sourceMethod": "getStatus()"
    },
    {
      "name": "management.endpoint.jolokia",
      "type": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaProperties"
    },
    {
      "name": "management.endpoint.jolokia",
      "type": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaEndpoint",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaEndpoint"
    },
    {
      "name": "management.endpoint.logfile",
      "type": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties"
    },
    {
      "name": "management.endpoints.jmx",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties"
    },
    {
      "name": "management.endpoints.jmx.exposure",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "sourceMethod": "getExposure()"
    },
    {
      "name": "management.endpoints.web",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
    },
    {
      "name": "management.endpoints.web.cors",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
    },
    {
      "name": "management.endpoints.web.exposure",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "sourceMethod": "getExposure()"
    },
    {
      "name": "management.health.db",
      "type": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
    },
    {
      "name": "management.health.diskspace",
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
    },
    {
      "name": "management.info",
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties"
    },
    {
      "name": "management.info.git",
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "sourceMethod": "getGit()"
    },
    {
      "name": "management.metrics",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
    },
    {
      "name": "management.metrics.distribution",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "sourceMethod": "getDistribution()"
    },
    {
      "name": "management.metrics.export.appoptics",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
    },
    {
      "name": "management.metrics.export.atlas",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
    },
    {
      "name": "management.metrics.export.datadog",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
    },
    {
      "name": "management.metrics.export.dynatrace",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
    },
    {
      "name": "management.metrics.export.elastic",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
    },
    {
      "name": "management.metrics.export.ganglia",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
    },
    {
      "name": "management.metrics.export.graphite",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
    },
    {
      "name": "management.metrics.export.humio",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
    },
    {
      "name": "management.metrics.export.influx",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
    },
    {
      "name": "management.metrics.export.jmx",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties"
    },
    {
      "name": "management.metrics.export.kairos",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
    },
    {
      "name": "management.metrics.export.newrelic",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
    },
    {
      "name": "management.metrics.export.prometheus",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
      "sourceMethod": "getPushgateway()"
    },
    {
      "name": "management.metrics.export.signalfx",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
    },
    {
      "name": "management.metrics.export.simple",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
    },
    {
      "name": "management.metrics.export.stackdriver",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
    },
    {
      "name": "management.metrics.export.statsd",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
    },
    {
      "name": "management.metrics.export.wavefront",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
    },
    {
      "name": "management.metrics.export.wavefront.sender",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "sourceMethod": "getSender()"
    },
    {
      "name": "management.metrics.web",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "sourceMethod": "getWeb()"
    },
    {
      "name": "management.metrics.web.client",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
      "sourceMethod": "getClient()"
    },
    {
      "name": "management.metrics.web.client.request",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
      "sourceMethod": "getRequest()"
    },
    {
      "name": "management.metrics.web.client.request.autotime",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest",
      "sourceMethod": "getAutotime()"
    },
    {
      "name": "management.metrics.web.server",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
      "sourceMethod": "getServer()"
    },
    {
      "name": "management.metrics.web.server.request",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
      "sourceMethod": "getRequest()"
    },
    {
      "name": "management.metrics.web.server.request.autotime",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest",
      "sourceMethod": "getAutotime()"
    },
    {
      "name": "management.server",
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
    },
    {
      "name": "management.server.servlet",
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties$Servlet",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "sourceMethod": "getServlet()"
    },
    {
      "name": "management.server.ssl",
      "type": "org.springframework.boot.web.server.Ssl",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "sourceMethod": "getSsl()"
    },
    {
      "name": "management.trace.http",
      "type": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties"
    }
  ],
  "properties": [
    {
      "name": "info",
      "type": "java.util.Map<java.lang.String,java.lang.Object>",
      "description": "Arbitrary properties to add to the info endpoint."
    },
    {
      "name": "management.auditevents.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable storage of audit events.",
      "defaultValue": true
    },
    {
      "name": "management.cloudfoundry.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable extended Cloud Foundry actuator endpoints.",
      "defaultValue": true
    },
    {
      "name": "management.cloudfoundry.skip-ssl-validation",
      "type": "java.lang.Boolean",
      "description": "Whether to skip SSL verification for Cloud Foundry actuator endpoint security calls.",
      "defaultValue": false
    },
    {
      "name": "management.endpoint.conditions.cache.time-to-live",
      "type": "java.time.Duration",
      "description": "Maximum time that a response can be cached.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
      "defaultValue": "0ms"
    },
    {
      "name": "management.endpoint.conditions.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable the conditions endpoint.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
      "defaultValue": true
    },
    {
      "name": "management.endpoint.configprops.keys-to-sanitize",
      "type": "java.lang.String[]",
      "description": "Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
      "defaultValue": [
        "password",
        "secret",
        "key",
        "token",
        ".*credentials.*",
        "vcap_services",
        "sun.java.command"
      ]
    },
    {
      "name": "management.endpoint.env.keys-to-sanitize",
      "type": "java.lang.String[]",
      "description": "Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
      "defaultValue": [
        "password",
        "secret",
        "key",
        "token",
        ".*credentials.*",
        "vcap_services",
        "sun.java.command"
      ]
    },
    {
      "name": "management.endpoint.health.group",
      "type": "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group>",
      "description": "Health endpoint groups.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
    },
    {
      "name": "management.endpoint.health.probes.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable liveness and readiness probes.",
      "defaultValue": false
    },
    {
      "name": "management.endpoint.health.roles",
      "type": "java.util.Set<java.lang.String>",
      "description": "Roles used to determine whether or not a user is authorized to be shown details. When empty, all authenticated users are authorized.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
    },
    {
      "name": "management.endpoint.health.show-components",
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show",
      "description": "When to show components. If not specified the 'show-details' setting will be used.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
    },
    {
      "name": "management.endpoint.health.show-details",
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show",
      "description": "When to show full health details.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "defaultValue": "never"
    },
    {
      "name": "management.endpoint.health.status.http-mapping",
      "type": "java.util.Map<java.lang.String,java.lang.Integer>",
      "description": "Mapping of health statuses to HTTP status codes. By default, registered health statuses map to sensible defaults (for example, UP maps to 200).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status"
    },
    {
      "name": "management.endpoint.health.status.order",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of health statuses in order of severity.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status",
      "defaultValue": [
        "DOWN",
        "OUT_OF_SERVICE",
        "UP",
        "UNKNOWN"
      ]
    },
    {
      "name": "management.endpoint.jolokia.config",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Jolokia settings. Refer to the documentation of Jolokia for more details.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaProperties"
    },
    {
      "name": "management.endpoint.jolokia.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable the jolokia endpoint.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaEndpoint",
      "defaultValue": true
    },
    {
      "name": "management.endpoint.logfile.external-file",
      "type": "java.io.File",
      "description": "External Logfile to be accessed. Can be used if the logfile is written by output redirect and not by the logging system itself.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties"
    },
    {
      "name": "management.endpoints.enabled-by-default",
      "type": "java.lang.Boolean",
      "description": "Whether to enable or disable all endpoints by default."
    },
    {
      "name": "management.endpoints.jmx.domain",
      "type": "java.lang.String",
      "description": "Endpoints JMX domain name. Fallback to 'spring.jmx.default-domain' if set.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "defaultValue": "org.springframework.boot"
    },
    {
      "name": "management.endpoints.jmx.exposure.exclude",
      "type": "java.util.Set<java.lang.String>",
      "description": "Endpoint IDs that should be excluded or '*' for all.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure"
    },
    {
      "name": "management.endpoints.jmx.exposure.include",
      "type": "java.util.Set<java.lang.String>",
      "description": "Endpoint IDs that should be included or '*' for all.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure",
      "defaultValue": "*"
    },
    {
      "name": "management.endpoints.jmx.static-names",
      "type": "java.util.Properties",
      "description": "Additional static properties to append to all ObjectNames of MBeans representing Endpoints.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties"
    },
    {
      "name": "management.endpoints.web.base-path",
      "type": "java.lang.String",
      "description": "Base path for Web endpoints. Relative to the servlet context path (server.servlet.context-path) or WebFlux base path (spring.webflux.base-path) when the management server is sharing the main server port. Relative to the management server base path (management.server.base-path) when a separate management server port (management.server.port) is configured.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "defaultValue": "\/actuator"
    },
    {
      "name": "management.endpoints.web.cors.allow-credentials",
      "type": "java.lang.Boolean",
      "description": "Whether credentials are supported. When not set, credentials are not supported.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
    },
    {
      "name": "management.endpoints.web.cors.allowed-headers",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of headers to allow in a request. '*' allows all headers.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
    },
    {
      "name": "management.endpoints.web.cors.allowed-methods",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of methods to allow. '*' allows all methods. When not set, defaults to GET.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
    },
    {
      "name": "management.endpoints.web.cors.allowed-origins",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of origins to allow. '*' allows all origins. When not set, CORS support is disabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
    },
    {
      "name": "management.endpoints.web.cors.exposed-headers",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated list of headers to include in a response.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
    },
    {
      "name": "management.endpoints.web.cors.max-age",
      "type": "java.time.Duration",
      "description": "How long the response from a pre-flight request can be cached by clients. If a duration suffix is not specified, seconds will be used.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "defaultValue": "1800s"
    },
    {
      "name": "management.endpoints.web.exposure.exclude",
      "type": "java.util.Set<java.lang.String>",
      "description": "Endpoint IDs that should be excluded or '*' for all.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure"
    },
    {
      "name": "management.endpoints.web.exposure.include",
      "type": "java.util.Set<java.lang.String>",
      "description": "Endpoint IDs that should be included or '*' for all.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
      "defaultValue": [
        "health",
        "info"
      ]
    },
    {
      "name": "management.endpoints.web.path-mapping",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Mapping between endpoint IDs and the path that should expose them.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
    },
    {
      "name": "management.health.cassandra.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Cassandra health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.couchbase.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Couchbase health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.db.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable database health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.db.ignore-routing-data-sources",
      "type": "java.lang.Boolean",
      "description": "Whether to ignore AbstractRoutingDataSources when creating database health indicators.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
      "defaultValue": false
    },
    {
      "name": "management.health.defaults.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable default health indicators.",
      "defaultValue": true
    },
    {
      "name": "management.health.diskspace.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable disk space health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.diskspace.path",
      "type": "java.io.File",
      "description": "Path used to compute the available disk space.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
    },
    {
      "name": "management.health.diskspace.threshold",
      "type": "org.springframework.util.unit.DataSize",
      "description": "Minimum disk space that should be available.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "defaultValue": "10MB"
    },
    {
      "name": "management.health.elasticsearch.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Elasticsearch health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.influxdb.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable InfluxDB health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.jms.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JMS health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.ldap.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable LDAP health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.livenessstate.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable liveness state health check.",
      "defaultValue": false
    },
    {
      "name": "management.health.mail.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Mail health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.mongo.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable MongoDB health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.neo4j.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Neo4j health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.ping.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable ping health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.rabbit.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable RabbitMQ health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.readinessstate.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable readiness state health check.",
      "defaultValue": false
    },
    {
      "name": "management.health.redis.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Redis health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.solr.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Solr health check.",
      "defaultValue": true
    },
    {
      "name": "management.health.status.order",
      "defaultValue": [
        "DOWN",
        "OUT_OF_SERVICE",
        "UP",
        "UNKNOWN"
      ]
    },
    {
      "name": "management.info.build.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable build info.",
      "defaultValue": true
    },
    {
      "name": "management.info.defaults.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable default info contributors.",
      "defaultValue": true
    },
    {
      "name": "management.info.env.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable environment info.",
      "defaultValue": true
    },
    {
      "name": "management.info.git.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable git info.",
      "defaultValue": true
    },
    {
      "name": "management.info.git.mode",
      "type": "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode",
      "description": "Mode to use to expose git information.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
      "defaultValue": "simple"
    },
    {
      "name": "management.metrics.distribution.maximum-expected-value",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Maximum value that meter IDs starting with the specified name are expected to observe. The longest match wins. Values can be specified as a long or as a Duration value (for timer meters, defaulting to ms if no unit specified).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
    },
    {
      "name": "management.metrics.distribution.minimum-expected-value",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Minimum value that meter IDs starting with the specified name are expected to observe. The longest match wins. Values can be specified as a long or as a Duration value (for timer meters, defaulting to ms if no unit specified).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
    },
    {
      "name": "management.metrics.distribution.percentiles",
      "type": "java.util.Map<java.lang.String,java.lang.Double[]>",
      "description": "Specific computed non-aggregable percentiles to ship to the backend for meter IDs starting-with the specified name. The longest match wins, the key `all` can also be used to configure all meters.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
    },
    {
      "name": "management.metrics.distribution.percentiles-histogram",
      "type": "java.util.Map<java.lang.String,java.lang.Boolean>",
      "description": "Whether meter IDs starting with the specified name should publish percentile histograms. For monitoring systems that support aggregable percentile calculation based on a histogram, this can be set to true. For other systems, this has no effect. The longest match wins, the key `all` can also be used to configure all meters.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
    },
    {
      "name": "management.metrics.distribution.slo",
      "type": "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary[]>",
      "description": "Specific service-level objective boundaries for meter IDs starting with the specified name. The longest match wins. Counters will be published for each specified boundary. Values can be specified as a long or as a Duration value (for timer meters, defaulting to ms if no unit specified).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
    },
    {
      "name": "management.metrics.enable",
      "type": "java.util.Map<java.lang.String,java.lang.Boolean>",
      "description": "Whether meter IDs starting with the specified name should be enabled. The longest match wins, the key `all` can also be used to configure all meters.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
    },
    {
      "name": "management.metrics.export.appoptics.api-token",
      "type": "java.lang.String",
      "description": "AppOptics API token.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties"
    },
    {
      "name": "management.metrics.export.appoptics.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "defaultValue": 500
    },
    {
      "name": "management.metrics.export.appoptics.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "defaultValue": "5s"
    },
    {
      "name": "management.metrics.export.appoptics.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.appoptics.floor-times",
      "type": "java.lang.Boolean",
      "description": "Whether to ship a floored time, useful when sending measurements from multiple hosts to align them on a given time boundary.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "defaultValue": false
    },
    {
      "name": "management.metrics.export.appoptics.host-tag",
      "type": "java.lang.String",
      "description": "Tag that will be mapped to \"@host\" when shipping metrics to AppOptics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "defaultValue": "instance"
    },
    {
      "name": "management.metrics.export.appoptics.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.appoptics.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.appoptics.uri",
      "type": "java.lang.String",
      "description": "URI to ship metrics to.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.appoptics.AppOpticsProperties",
      "defaultValue": "https:\/\/api.appoptics.com\/v1\/measurements"
    },
    {
      "name": "management.metrics.export.atlas.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.atlas.config-refresh-frequency",
      "type": "java.time.Duration",
      "description": "Frequency for refreshing config settings from the LWC service.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.atlas.config-time-to-live",
      "type": "java.time.Duration",
      "description": "Time to live for subscriptions from the LWC service.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "150s"
    },
    {
      "name": "management.metrics.export.atlas.config-uri",
      "type": "java.lang.String",
      "description": "URI for the Atlas LWC endpoint to retrieve current subscriptions.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "http:\/\/localhost:7101\/lwc\/api\/v1\/expressions\/local-dev"
    },
    {
      "name": "management.metrics.export.atlas.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.atlas.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.atlas.eval-uri",
      "type": "java.lang.String",
      "description": "URI for the Atlas LWC endpoint to evaluate the data for a subscription.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "http:\/\/localhost:7101\/lwc\/api\/v1\/evaluate"
    },
    {
      "name": "management.metrics.export.atlas.lwc-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable streaming to Atlas LWC.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": false
    },
    {
      "name": "management.metrics.export.atlas.meter-time-to-live",
      "type": "java.time.Duration",
      "description": "Time to live for meters that do not have any activity. After this period the meter will be considered expired and will not get reported.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "15m"
    },
    {
      "name": "management.metrics.export.atlas.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": 4
    },
    {
      "name": "management.metrics.export.atlas.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.atlas.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.atlas.uri",
      "type": "java.lang.String",
      "description": "URI of the Atlas server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "http:\/\/localhost:7101\/api\/v1\/publish"
    },
    {
      "name": "management.metrics.export.datadog.api-key",
      "type": "java.lang.String",
      "description": "Datadog API key.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
    },
    {
      "name": "management.metrics.export.datadog.application-key",
      "type": "java.lang.String",
      "description": "Datadog application key. Not strictly required, but improves the Datadog experience by sending meter descriptions, types, and base units to Datadog.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
    },
    {
      "name": "management.metrics.export.datadog.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.datadog.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.datadog.descriptions",
      "type": "java.lang.Boolean",
      "description": "Whether to publish descriptions metadata to Datadog. Turn this off to minimize the amount of metadata sent.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.datadog.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.datadog.host-tag",
      "type": "java.lang.String",
      "description": "Tag that will be mapped to \"host\" when shipping metrics to Datadog.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "instance"
    },
    {
      "name": "management.metrics.export.datadog.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.datadog.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.datadog.uri",
      "type": "java.lang.String",
      "description": "URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Datadog, you can define the location of the proxy with this.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "https:\/\/api.datadoghq.com"
    },
    {
      "name": "management.metrics.export.defaults.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable default metrics exporters.",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.dynatrace.api-token",
      "type": "java.lang.String",
      "description": "Dynatrace authentication token.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
    },
    {
      "name": "management.metrics.export.dynatrace.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.dynatrace.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.dynatrace.device-id",
      "type": "java.lang.String",
      "description": "ID of the custom device that is exporting metrics to Dynatrace.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
    },
    {
      "name": "management.metrics.export.dynatrace.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.dynatrace.group",
      "type": "java.lang.String",
      "description": "Group for exported metrics. Used to specify custom device group name in the Dynatrace UI.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
    },
    {
      "name": "management.metrics.export.dynatrace.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.dynatrace.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.dynatrace.technology-type",
      "type": "java.lang.String",
      "description": "Technology type for exported metrics. Used to group metrics under a logical technology name in the Dynatrace UI.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties",
      "defaultValue": "java"
    },
    {
      "name": "management.metrics.export.dynatrace.uri",
      "type": "java.lang.String",
      "description": "URI to ship metrics to. Should be used for SaaS, self managed instances or to en-route through an internal proxy.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.dynatrace.DynatraceProperties"
    },
    {
      "name": "management.metrics.export.elastic.auto-create-index",
      "type": "java.lang.Boolean",
      "description": "Whether to create the index automatically if it does not exist.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.elastic.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.elastic.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.elastic.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.elastic.host",
      "type": "java.lang.String",
      "description": "Host to export metrics to.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": "http:\/\/localhost:9200"
    },
    {
      "name": "management.metrics.export.elastic.index",
      "type": "java.lang.String",
      "description": "Index to export metrics to.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": "micrometer-metrics"
    },
    {
      "name": "management.metrics.export.elastic.index-date-format",
      "type": "java.lang.String",
      "description": "Index date format used for rolling indices. Appended to the index name.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": "yyyy-MM"
    },
    {
      "name": "management.metrics.export.elastic.index-date-separator",
      "type": "java.lang.String",
      "description": "Prefix to separate the index name from the date format used for rolling indices.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": "-"
    },
    {
      "name": "management.metrics.export.elastic.password",
      "type": "java.lang.String",
      "description": "Login password of the Elastic server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
    },
    {
      "name": "management.metrics.export.elastic.pipeline",
      "type": "java.lang.String",
      "description": "Ingest pipeline name. By default, events are not pre-processed.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
    },
    {
      "name": "management.metrics.export.elastic.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.elastic.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.elastic.timestamp-field-name",
      "type": "java.lang.String",
      "description": "Name of the timestamp field.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties",
      "defaultValue": "@timestamp"
    },
    {
      "name": "management.metrics.export.elastic.user-name",
      "type": "java.lang.String",
      "description": "Login user of the Elastic server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.elastic.ElasticProperties"
    },
    {
      "name": "management.metrics.export.ganglia.addressing-mode",
      "type": "info.ganglia.gmetric4j.gmetric.GMetric$UDPAddressingMode",
      "description": "UDP addressing mode, either unicast or multicast.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "multicast"
    },
    {
      "name": "management.metrics.export.ganglia.duration-units",
      "type": "java.util.concurrent.TimeUnit",
      "description": "Base time unit used to report durations.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "milliseconds"
    },
    {
      "name": "management.metrics.export.ganglia.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to Ganglia is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.ganglia.host",
      "type": "java.lang.String",
      "description": "Host of the Ganglia server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "localhost"
    },
    {
      "name": "management.metrics.export.ganglia.port",
      "type": "java.lang.Integer",
      "description": "Port of the Ganglia server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": 8649
    },
    {
      "name": "management.metrics.export.ganglia.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.ganglia.time-to-live",
      "type": "java.lang.Integer",
      "description": "Time to live for metrics on Ganglia. Set the multi-cast Time-To-Live to be one greater than the number of hops (routers) between the hosts.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": 1
    },
    {
      "name": "management.metrics.export.graphite.duration-units",
      "type": "java.util.concurrent.TimeUnit",
      "description": "Base time unit used to report durations.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "milliseconds"
    },
    {
      "name": "management.metrics.export.graphite.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to Graphite is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.graphite.graphite-tags-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether Graphite tags should be used, as opposed to a hierarchical naming convention. Enabled by default unless \"tagsAsPrefix\" is set.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
    },
    {
      "name": "management.metrics.export.graphite.host",
      "type": "java.lang.String",
      "description": "Host of the Graphite server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "localhost"
    },
    {
      "name": "management.metrics.export.graphite.port",
      "type": "java.lang.Integer",
      "description": "Port of the Graphite server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": 2004
    },
    {
      "name": "management.metrics.export.graphite.protocol",
      "type": "io.micrometer.graphite.GraphiteProtocol",
      "description": "Protocol to use while shipping data to Graphite.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "pickled"
    },
    {
      "name": "management.metrics.export.graphite.rate-units",
      "type": "java.util.concurrent.TimeUnit",
      "description": "Base time unit used to report rates.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "seconds"
    },
    {
      "name": "management.metrics.export.graphite.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.graphite.tags-as-prefix",
      "type": "java.lang.String[]",
      "description": "For the hierarchical naming convention, turn the specified tag keys into part of the metric prefix. Ignored if \"graphiteTagsEnabled\" is true.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": []
    },
    {
      "name": "management.metrics.export.humio.api-token",
      "type": "java.lang.String",
      "description": "Humio API token.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
    },
    {
      "name": "management.metrics.export.humio.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.humio.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties",
      "defaultValue": "5s"
    },
    {
      "name": "management.metrics.export.humio.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.humio.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.humio.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.humio.tags",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Humio tags describing the data source in which metrics will be stored. Humio tags are a distinct concept from Micrometer's tags. Micrometer's tags are used to divide metrics along dimensional boundaries.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties"
    },
    {
      "name": "management.metrics.export.humio.uri",
      "type": "java.lang.String",
      "description": "URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Humio, you can define the location of the proxy with this.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.humio.HumioProperties",
      "defaultValue": "https:\/\/cloud.humio.com"
    },
    {
      "name": "management.metrics.export.influx.auto-create-db",
      "type": "java.lang.Boolean",
      "description": "Whether to create the Influx database if it does not exist before attempting to publish metrics to it.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.influx.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.influx.compressed",
      "type": "java.lang.Boolean",
      "description": "Whether to enable GZIP compression of metrics batches published to Influx.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.influx.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.influx.consistency",
      "type": "io.micrometer.influx.InfluxConsistency",
      "description": "Write consistency for each point.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "one"
    },
    {
      "name": "management.metrics.export.influx.db",
      "type": "java.lang.String",
      "description": "Tag that will be mapped to \"host\" when shipping metrics to Influx.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "mydb"
    },
    {
      "name": "management.metrics.export.influx.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.influx.password",
      "type": "java.lang.String",
      "description": "Login password of the Influx server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
    },
    {
      "name": "management.metrics.export.influx.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.influx.retention-duration",
      "type": "java.lang.String",
      "description": "Time period for which Influx should retain data in the current database. For instance 7d, check the influx documentation for more details on the duration format.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
    },
    {
      "name": "management.metrics.export.influx.retention-policy",
      "type": "java.lang.String",
      "description": "Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
    },
    {
      "name": "management.metrics.export.influx.retention-replication-factor",
      "type": "java.lang.Integer",
      "description": "How many copies of the data are stored in the cluster. Must be 1 for a single node instance.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
    },
    {
      "name": "management.metrics.export.influx.retention-shard-duration",
      "type": "java.lang.String",
      "description": "Time range covered by a shard group. For instance 2w, check the influx documentation for more details on the duration format.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
    },
    {
      "name": "management.metrics.export.influx.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.influx.uri",
      "type": "java.lang.String",
      "description": "URI of the Influx server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "http:\/\/localhost:8086"
    },
    {
      "name": "management.metrics.export.influx.user-name",
      "type": "java.lang.String",
      "description": "Login user of the Influx server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
    },
    {
      "name": "management.metrics.export.jmx.domain",
      "type": "java.lang.String",
      "description": "Metrics JMX domain name.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties",
      "defaultValue": "metrics"
    },
    {
      "name": "management.metrics.export.jmx.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to JMX is enabled.",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.jmx.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.kairos.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.kairos.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.kairos.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.kairos.password",
      "type": "java.lang.String",
      "description": "Login password of the KairosDB server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
    },
    {
      "name": "management.metrics.export.kairos.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.kairos.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.kairos.uri",
      "type": "java.lang.String",
      "description": "URI of the KairosDB server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties",
      "defaultValue": "http:\/\/localhost:8080\/api\/v1\/datapoints"
    },
    {
      "name": "management.metrics.export.kairos.user-name",
      "type": "java.lang.String",
      "description": "Login user of the KairosDB server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.kairos.KairosProperties"
    },
    {
      "name": "management.metrics.export.newrelic.account-id",
      "type": "java.lang.String",
      "description": "New Relic account ID.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
    },
    {
      "name": "management.metrics.export.newrelic.api-key",
      "type": "java.lang.String",
      "description": "New Relic API key.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
    },
    {
      "name": "management.metrics.export.newrelic.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.newrelic.client-provider-type",
      "type": "io.micrometer.newrelic.ClientProviderType",
      "description": "Client provider type to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
    },
    {
      "name": "management.metrics.export.newrelic.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.newrelic.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.newrelic.event-type",
      "type": "java.lang.String",
      "description": "The event type that should be published. This property will be ignored if 'meter-name-event-type-enabled' is set to 'true'.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "SpringBootSample"
    },
    {
      "name": "management.metrics.export.newrelic.meter-name-event-type-enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to send the meter name as the event type instead of using the 'event-type' configuration property value. Can be set to 'true' if New Relic guidelines are not being followed or event types consistent with previous Spring Boot releases are required.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": false
    },
    {
      "name": "management.metrics.export.newrelic.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.newrelic.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.newrelic.uri",
      "type": "java.lang.String",
      "description": "URI to ship metrics to.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "https:\/\/insights-collector.newrelic.com"
    },
    {
      "name": "management.metrics.export.prometheus.descriptions",
      "type": "java.lang.Boolean",
      "description": "Whether to enable publishing descriptions as part of the scrape payload to Prometheus. Turn this off to minimize the amount of data sent on each scrape.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.prometheus.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to Prometheus is enabled.",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.prometheus.histogram-flavor",
      "type": "io.micrometer.prometheus.HistogramFlavor",
      "description": "Histogram type for backing DistributionSummary and Timer.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
      "defaultValue": "prometheus"
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway.base-url",
      "type": "java.lang.String",
      "description": "Base URL for the Pushgateway.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway",
      "defaultValue": "http:\/\/localhost:9091"
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway.enabled",
      "type": "java.lang.Boolean",
      "description": "Enable publishing via a Prometheus Pushgateway.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway",
      "defaultValue": false
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway.grouping-key",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Grouping key for the pushed metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway.job",
      "type": "java.lang.String",
      "description": "Job identifier for this application instance.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway.password",
      "type": "java.lang.String",
      "description": "Login password of the Prometheus Pushgateway.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway.push-rate",
      "type": "java.time.Duration",
      "description": "Frequency with which to push metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway.shutdown-operation",
      "type": "org.springframework.boot.actuate.metrics.export.prometheus.PrometheusPushGatewayManager$ShutdownOperation",
      "description": "Operation that should be performed on shutdown.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway",
      "defaultValue": "none"
    },
    {
      "name": "management.metrics.export.prometheus.pushgateway.username",
      "type": "java.lang.String",
      "description": "Login user of the Prometheus Pushgateway.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties$Pushgateway"
    },
    {
      "name": "management.metrics.export.prometheus.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.signalfx.access-token",
      "type": "java.lang.String",
      "description": "SignalFX access token.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
    },
    {
      "name": "management.metrics.export.signalfx.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.signalfx.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.signalfx.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.signalfx.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.signalfx.source",
      "type": "java.lang.String",
      "description": "Uniquely identifies the app instance that is publishing metrics to SignalFx. Defaults to the local host name.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
    },
    {
      "name": "management.metrics.export.signalfx.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.signalfx.uri",
      "type": "java.lang.String",
      "description": "URI to ship metrics to.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": "https:\/\/ingest.signalfx.com"
    },
    {
      "name": "management.metrics.export.simple.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether, in the absence of any other exporter, exporting of metrics to an in-memory backend is enabled.",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.simple.mode",
      "type": "io.micrometer.core.instrument.simple.CountingMode",
      "description": "Counting mode.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "defaultValue": "cumulative"
    },
    {
      "name": "management.metrics.export.simple.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.stackdriver.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.stackdriver.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.stackdriver.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.stackdriver.project-id",
      "type": "java.lang.String",
      "description": "Identifier of the Google Cloud project to monitor.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties"
    },
    {
      "name": "management.metrics.export.stackdriver.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.stackdriver.resource-type",
      "type": "java.lang.String",
      "description": "Monitored resource type.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties",
      "defaultValue": "global"
    },
    {
      "name": "management.metrics.export.stackdriver.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.stackdriver.StackdriverProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.statsd.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to StatsD is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.statsd.flavor",
      "type": "io.micrometer.statsd.StatsdFlavor",
      "description": "StatsD line protocol to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": "datadog"
    },
    {
      "name": "management.metrics.export.statsd.host",
      "type": "java.lang.String",
      "description": "Host of the StatsD server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": "localhost"
    },
    {
      "name": "management.metrics.export.statsd.max-packet-length",
      "type": "java.lang.Integer",
      "description": "Total length of a single payload should be kept within your network's MTU.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": 1400
    },
    {
      "name": "management.metrics.export.statsd.polling-frequency",
      "type": "java.time.Duration",
      "description": "How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed (or publishUnchangedMeters is true), it is sent to the StatsD server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": "10s"
    },
    {
      "name": "management.metrics.export.statsd.port",
      "type": "java.lang.Integer",
      "description": "Port of the StatsD server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": 8125
    },
    {
      "name": "management.metrics.export.statsd.protocol",
      "type": "io.micrometer.statsd.StatsdProtocol",
      "description": "Protocol of the StatsD server to receive exported metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": "udp"
    },
    {
      "name": "management.metrics.export.statsd.publish-unchanged-meters",
      "type": "java.lang.Boolean",
      "description": "Whether to send unchanged meters to the StatsD server.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.wavefront.api-token",
      "type": "java.lang.String",
      "description": "API token used when publishing metrics directly to the Wavefront API host.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
    },
    {
      "name": "management.metrics.export.wavefront.batch-size",
      "type": "java.lang.Integer",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": 10000
    },
    {
      "name": "management.metrics.export.wavefront.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.export.wavefront.global-prefix",
      "type": "java.lang.String",
      "description": "Global prefix to separate metrics originating from this app's white box instrumentation from those originating from other Wavefront integrations when viewed in the Wavefront UI.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
    },
    {
      "name": "management.metrics.export.wavefront.sender.flush-interval",
      "type": "java.time.Duration",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender",
      "defaultValue": "1s"
    },
    {
      "name": "management.metrics.export.wavefront.sender.max-queue-size",
      "type": "java.lang.Integer",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender",
      "defaultValue": 50000
    },
    {
      "name": "management.metrics.export.wavefront.sender.message-size",
      "type": "org.springframework.util.unit.DataSize",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties$Sender"
    },
    {
      "name": "management.metrics.export.wavefront.source",
      "type": "java.lang.String",
      "description": "Unique identifier for the app instance that is the source of metrics being published to Wavefront. Defaults to the local host name.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
    },
    {
      "name": "management.metrics.export.wavefront.step",
      "type": "java.time.Duration",
      "description": "Step size (i.e. reporting frequency) to use.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": "1m"
    },
    {
      "name": "management.metrics.export.wavefront.uri",
      "type": "java.net.URI",
      "description": "URI to ship metrics to.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": "https:\/\/longboard.wavefront.com"
    },
    {
      "name": "management.metrics.tags",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Common tags that are applied to every meter.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
    },
    {
      "name": "management.metrics.use-global-registry",
      "type": "java.lang.Boolean",
      "description": "Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics. For testing, set this to 'false' to maximize test independence.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.web.client.max-uri-tags",
      "type": "java.lang.Integer",
      "description": "Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
      "defaultValue": 100
    },
    {
      "name": "management.metrics.web.client.request.autotime.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to automatically time web client requests.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.web.client.request.autotime.percentiles",
      "type": "java.lang.Double[]",
      "description": "Computed non-aggregable percentiles to publish.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
    },
    {
      "name": "management.metrics.web.client.request.autotime.percentiles-histogram",
      "type": "java.lang.Boolean",
      "description": "Whether percentile histograms should be published.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
      "defaultValue": false
    },
    {
      "name": "management.metrics.web.client.request.metric-name",
      "type": "java.lang.String",
      "description": "Name of the metric for sent requests.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client$ClientRequest",
      "defaultValue": "http.client.requests"
    },
    {
      "name": "management.metrics.web.server.max-uri-tags",
      "type": "java.lang.Integer",
      "description": "Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
      "defaultValue": 100
    },
    {
      "name": "management.metrics.web.server.request.autotime.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to automatically time web server requests.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
      "defaultValue": true
    },
    {
      "name": "management.metrics.web.server.request.autotime.percentiles",
      "type": "java.lang.Double[]",
      "description": "Computed non-aggregable percentiles to publish.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties"
    },
    {
      "name": "management.metrics.web.server.request.autotime.percentiles-histogram",
      "type": "java.lang.Boolean",
      "description": "Whether percentile histograms should be published.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
      "defaultValue": false
    },
    {
      "name": "management.metrics.web.server.request.ignore-trailing-slash",
      "type": "java.lang.Boolean",
      "description": "Whether the trailing slash should be ignored when recording metrics.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest",
      "defaultValue": true
    },
    {
      "name": "management.metrics.web.server.request.metric-name",
      "type": "java.lang.String",
      "description": "Name of the metric for received requests.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server$ServerRequest",
      "defaultValue": "http.server.requests"
    },
    {
      "name": "management.server.add-application-context-header",
      "type": "java.lang.Boolean",
      "description": "Add the \"X-Application-Context\" HTTP header in each response.",
      "defaultValue": false
    },
    {
      "name": "management.server.address",
      "type": "java.net.InetAddress",
      "description": "Network address to which the management endpoints should bind. Requires a custom management.server.port.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
    },
    {
      "name": "management.server.base-path",
      "type": "java.lang.String",
      "description": "Management endpoint base path (for instance, `\/management`). Requires a custom management.server.port.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "defaultValue": ""
    },
    {
      "name": "management.server.port",
      "type": "java.lang.Integer",
      "description": "Management endpoint HTTP port (uses the same port as the application by default). Configure a different port to use management-specific SSL.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
    },
    {
      "name": "management.server.ssl.ciphers",
      "type": "java.lang.String[]",
      "description": "Supported SSL ciphers.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.client-auth",
      "type": "org.springframework.boot.web.server.Ssl$ClientAuth",
      "description": "Client authentication mode. Requires a trust store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable SSL support.",
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "defaultValue": true
    },
    {
      "name": "management.server.ssl.enabled-protocols",
      "type": "java.lang.String[]",
      "description": "Enabled SSL protocols.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.key-alias",
      "type": "java.lang.String",
      "description": "Alias that identifies the key in the key store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.key-password",
      "type": "java.lang.String",
      "description": "Password used to access the key in the key store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.key-store",
      "type": "java.lang.String",
      "description": "Path to the key store that holds the SSL certificate (typically a jks file).",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.key-store-password",
      "type": "java.lang.String",
      "description": "Password used to access the key store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.key-store-provider",
      "type": "java.lang.String",
      "description": "Provider for the key store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.key-store-type",
      "type": "java.lang.String",
      "description": "Type of the key store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.protocol",
      "type": "java.lang.String",
      "description": "SSL protocol to use.",
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "defaultValue": "TLS"
    },
    {
      "name": "management.server.ssl.trust-store",
      "type": "java.lang.String",
      "description": "Trust store that holds SSL certificates.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.trust-store-password",
      "type": "java.lang.String",
      "description": "Password used to access the trust store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.trust-store-provider",
      "type": "java.lang.String",
      "description": "Provider for the trust store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.server.ssl.trust-store-type",
      "type": "java.lang.String",
      "description": "Type of the trust store.",
      "sourceType": "org.springframework.boot.web.server.Ssl"
    },
    {
      "name": "management.trace.http.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable HTTP request-response tracing.",
      "defaultValue": true
    },
    {
      "name": "management.trace.http.include",
      "type": "java.util.Set<org.springframework.boot.actuate.trace.http.Include>",
      "description": "Items to be included in the trace. Defaults to request headers (excluding Authorization and Cookie), response headers (excluding Set-Cookie), and time taken.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties",
      "defaultValue": [
        "request-headers",
        "response-headers",
        "errors"
      ]
    },
    {
      "name": "management.endpoints.jmx.unique-names",
      "type": "java.lang.Boolean",
      "description": "Whether unique runtime object names should be ensured.",
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "replacement": "spring.jmx.unique-names"
      }
    },
    {
      "name": "management.health.couchbase.timeout",
      "type": "java.time.Duration",
      "description": "Timeout for getting the Bucket information from the server.",
      "defaultValue": "1000ms",
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.health.elasticsearch.indices",
      "type": "java.util.List<java.lang.String>",
      "description": "Comma-separated index names.",
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.health.elasticsearch.response-timeout",
      "type": "java.time.Duration",
      "description": "Time to wait for a response from the cluster.",
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.health.probes.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable liveness and readiness probes.",
      "defaultValue": false,
      "deprecated": true,
      "deprecation": {
        "replacement": "management.endpoint.health.probes.enabled"
      }
    },
    {
      "name": "management.metrics.binders.files.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable files metrics.",
      "defaultValue": true,
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "reason": "Instead, filter 'process.files' metrics.",
        "replacement": "management.metrics.enable.process.files"
      }
    },
    {
      "name": "management.metrics.binders.jvm.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable JVM metrics.",
      "defaultValue": true,
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "reason": "Instead, disable JvmMetricsAutoConfiguration or filter 'jvm' metrics.",
        "replacement": "management.metrics.enable.jvm"
      }
    },
    {
      "name": "management.metrics.binders.logback.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable Logback metrics.",
      "defaultValue": true,
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "reason": "Instead, disable LogbackMetricsAutoConfiguration or filter 'logback' metrics.",
        "replacement": "management.metrics.enable.logback"
      }
    },
    {
      "name": "management.metrics.binders.processor.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable processor metrics.",
      "defaultValue": true,
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "reason": "Instead, filter 'system.cpu' and 'process.cpu' metrics."
      }
    },
    {
      "name": "management.metrics.binders.uptime.enabled",
      "type": "java.lang.Boolean",
      "description": "Whether to enable uptime metrics.",
      "defaultValue": true,
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "reason": "Instead, filter 'process.uptime' and 'process.start.time' metrics."
      }
    },
    {
      "name": "management.metrics.distribution.sla",
      "type": "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary[]>",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
      "deprecated": true,
      "deprecation": {
        "replacement": "management.metrics.distribution.slo"
      }
    },
    {
      "name": "management.metrics.export.appoptics.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.datadog.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.dynatrace.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.elastic.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.ganglia.protocol-version",
      "type": "java.lang.String",
      "description": "Ganglia protocol version. Must be either 3.1 or 3.0.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "deprecated": true,
      "deprecation": {
        "reason": "No longer used by Micrometer."
      }
    },
    {
      "name": "management.metrics.export.ganglia.rate-units",
      "type": "java.util.concurrent.TimeUnit",
      "description": "Base time unit used to report rates.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "seconds",
      "deprecated": true,
      "deprecation": {
        "reason": "No longer used by Micrometer."
      }
    },
    {
      "name": "management.metrics.export.humio.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.humio.repository",
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.influx.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.kairos.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.newrelic.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.signalfx.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.stackdriver.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.statsd.queue-size",
      "defaultValue": 2147483647,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.wavefront.connect-timeout",
      "type": "java.time.Duration",
      "description": "Connection timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": "1s",
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.wavefront.num-threads",
      "type": "java.lang.Integer",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "defaultValue": 2,
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.export.wavefront.read-timeout",
      "type": "java.time.Duration",
      "description": "Read timeout for requests to this backend.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": "10s",
      "deprecated": true,
      "deprecation": {
        "level": "error"
      }
    },
    {
      "name": "management.metrics.web.client.requests-metric-name",
      "type": "java.lang.String",
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "replacement": "management.metrics.web.client.request.metric-name"
      }
    },
    {
      "name": "management.metrics.web.server.auto-time-requests",
      "type": "java.lang.Boolean",
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "replacement": "management.metrics.web.server.request.autotime.enabled"
      }
    },
    {
      "name": "management.metrics.web.server.requests-metric-name",
      "type": "java.lang.String",
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "replacement": "management.metrics.web.server.request.metric-name"
      }
    },
    {
      "name": "management.server.servlet.context-path",
      "type": "java.lang.String",
      "description": "Management endpoint context-path (for instance, `\/management`). Requires a custom management.server.port.",
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties$Servlet",
      "defaultValue": "",
      "deprecated": true,
      "deprecation": {
        "replacement": "management.server.base-path"
      }
    },
    {
      "name": "management.trace.include",
      "deprecated": true,
      "deprecation": {
        "level": "error",
        "replacement": "management.trace.http.include"
      }
    }
  ],
  "hints": [
    {
      "name": "management.endpoints.web.cors.allowed-headers",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "management.endpoints.web.cors.allowed-methods",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "management.endpoints.web.cors.allowed-origins",
      "values": [
        {
          "value": "*"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "management.health.status.order",
      "values": [
        {
          "value": "UNKNOWN"
        },
        {
          "value": "UP"
        },
        {
          "value": "DOWN"
        },
        {
          "value": "OUT_OF_SERVICE"
        }
      ],
      "providers": [
        {
          "name": "any"
        }
      ]
    }
  ]
}