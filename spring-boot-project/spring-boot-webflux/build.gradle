plugins {
	id "java-library"
	id "java-test-fixtures"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot WebFlux"

dependencies {
	api(project(":spring-boot-project:spring-boot"))
	api("org.springframework:spring-webflux")

	implementation(project(":spring-boot-project:spring-boot-http-codec"))
	implementation(project(":spring-boot-project:spring-boot-web-server"))

	optional(project(":spring-boot-project:spring-boot-actuator-autoconfigure"))
	optional(project(":spring-boot-project:spring-boot-autoconfigure"))
	optional(project(":spring-boot-project:spring-boot-metrics"))
	optional(project(":spring-boot-project:spring-boot-observation"))
	optional(project(":spring-boot-project:spring-boot-validation"))
	optional("com.fasterxml.jackson.core:jackson-databind")
	optional("org.springframework.security:spring-security-core")

	testFixturesApi(testFixtures(project(":spring-boot-project:spring-boot-actuator")))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-jackson"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-reactor-netty"))

	testImplementation(project(":spring-boot-project:spring-boot-mustache"))
	testImplementation(project(":spring-boot-project:spring-boot-reactor-netty"))
	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tomcat"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot-web-server")))
	testImplementation("io.projectreactor:reactor-test")
	testImplementation("org.aspectj:aspectjweaver")

	testRuntimeOnly("ch.qos.logback:logback-classic")
	testRuntimeOnly("com.fasterxml.jackson.core:jackson-databind")
	testRuntimeOnly("jakarta.servlet:jakarta.servlet-api")
}
