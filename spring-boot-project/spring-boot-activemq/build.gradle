plugins {
	id "java-library"
	id "org.springframework.boot.docker-test"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot ActiveMQ"

dependencies {
	api(project(":spring-boot-project:spring-boot-jms"))
	api("org.apache.activemq:activemq-client")

	dockerTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support-docker"))
	dockerTestImplementation("ch.qos.logback:logback-classic")
	dockerTestImplementation("org.assertj:assertj-core")
	dockerTestImplementation("org.awaitility:awaitility")
	dockerTestImplementation("org.junit.jupiter:junit-jupiter")
	dockerTestImplementation("org.junit.platform:junit-platform-launcher")
	dockerTestImplementation("org.springframework:spring-test")
	dockerTestImplementation("org.testcontainers:junit-jupiter")

	optional(project(":spring-boot-project:spring-boot-autoconfigure"))
	optional(project(":spring-boot-project:spring-boot-testcontainers"))
	optional("jakarta.transaction:jakarta.transaction-api")
	optional("org.apache.activemq:activemq-broker")
	optional("org.messaginghub:pooled-jms") {
		exclude group: "org.apache.geronimo.specs", module: "geronimo-jms_2.0_spec"
	}
	optional("org.testcontainers:activemq")

	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation("org.assertj:assertj-core")
	testImplementation("org.awaitility:awaitility")
	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.mockito:mockito-core")
	testImplementation("org.mockito:mockito-junit-jupiter")

	testRuntimeOnly("ch.qos.logback:logback-classic")
}