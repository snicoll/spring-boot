plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.docker-test"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot Session Data MongoDB"

dependencies {
	api(project(":spring-boot-project:spring-boot"))
	api(project(":spring-boot-project:spring-boot-session"))
	api("org.springframework.session:spring-session-data-mongodb")
	
	dockerTestImplementation(project(":spring-boot-project:spring-boot-test"))
	dockerTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support-docker"))
	dockerTestImplementation(project(":spring-boot-project:spring-boot-webflux"))
	dockerTestImplementation(testFixtures(project(":spring-boot-project:spring-boot")))
	dockerTestImplementation(testFixtures(project(":spring-boot-project:spring-boot-session")))
	dockerTestImplementation("org.assertj:assertj-core")
	dockerTestImplementation("org.junit.jupiter:junit-jupiter")
	dockerTestImplementation("org.mongodb:mongodb-driver-reactivestreams")
	dockerTestImplementation("org.mongodb:mongodb-driver-sync")
	dockerTestImplementation("org.testcontainers:junit-jupiter")
	dockerTestImplementation("org.testcontainers:mongodb")
	
	dockerTestRuntimeOnly("ch.qos.logback:logback-classic")
	dockerTestRuntimeOnly("jakarta.servlet:jakarta.servlet-api")
	
	implementation(project(":spring-boot-project:spring-boot-data-mongodb"))

	optional(project(":spring-boot-project:spring-boot-autoconfigure"))
}
