plugins {
	id "java-library"
	id "java-test-fixtures"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.optional-dependencies"
	id "org.springframework.boot.docker-test"
	id "org.springframework.boot.deployed"
}

description = "Spring Boot Actuator"

dependencies {
	api(project(":spring-boot-project:spring-boot"))

	dockerTestImplementation(project(":spring-boot-project:spring-boot-autoconfigure"))
	dockerTestImplementation(project(":spring-boot-project:spring-boot-neo4j"))
	dockerTestImplementation(project(":spring-boot-project:spring-boot-test"))
	dockerTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support-docker"))
	dockerTestImplementation("org.assertj:assertj-core")
	dockerTestImplementation("org.junit.jupiter:junit-jupiter")
	dockerTestImplementation("org.springframework:spring-test")
	dockerTestImplementation("org.testcontainers:junit-jupiter")
	dockerTestImplementation("org.testcontainers:neo4j")
	dockerTestImplementation("org.testcontainers:testcontainers")

	optional(project(":spring-boot-project:spring-boot-activemq"))
	optional(project(":spring-boot-project:spring-boot-http-converter"))
	optional(project(":spring-boot-project:spring-boot-jdbc"))
	optional(project(":spring-boot-project:spring-boot-jetty"))
	optional(project(":spring-boot-project:spring-boot-jsonb"))
	optional(project(":spring-boot-project:spring-boot-liquibase"))
	optional(project(":spring-boot-project:spring-boot-reactor-netty"))
	optional(project(":spring-boot-project:spring-boot-tomcat"))
	optional(project(":spring-boot-project:spring-boot-undertow"))
	optional(project(":spring-boot-project:spring-boot-validation"))
	optional(project(":spring-boot-project:spring-boot-webflux"))
	optional(project(":spring-boot-project:spring-boot-webmvc"))
	optional("com.fasterxml.jackson.core:jackson-databind")
	optional("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
	optional("com.github.ben-manes.caffeine:caffeine")
	optional("com.google.code.findbugs:jsr305")
	optional("com.zaxxer:HikariCP")
	optional("io.lettuce:lettuce-core")
	optional("io.micrometer:micrometer-observation")
	optional("io.micrometer:micrometer-jakarta9")
	optional("io.micrometer:micrometer-tracing")
	optional("io.micrometer:micrometer-registry-prometheus")
	optional("io.micrometer:micrometer-registry-prometheus-simpleclient")
	optional("io.prometheus:prometheus-metrics-exposition-formats")
	optional("io.prometheus:prometheus-metrics-exporter-pushgateway")
	optional("io.r2dbc:r2dbc-pool")
	optional("io.r2dbc:r2dbc-spi")
	optional("io.undertow:undertow-servlet")
	optional("javax.cache:cache-api")
	optional("org.apache.tomcat.embed:tomcat-embed-core")
	optional("org.aspectj:aspectjweaver")
	optional("org.eclipse.angus:angus-mail")
	optional("org.eclipse.jetty:jetty-server") {
		exclude(group: "org.eclipse.jetty.toolchain", module: "jetty-jakarta-servlet-api")
	}
	optional("org.glassfish.jersey.core:jersey-server")
	optional("org.glassfish.jersey.containers:jersey-container-servlet-core")
	optional("org.hibernate.validator:hibernate-validator")
	optional("org.influxdb:influxdb-java")
	optional("org.liquibase:liquibase-core") {
		exclude(group: "javax.xml.bind", module: "jaxb-api")
	}
	optional("org.neo4j.driver:neo4j-java-driver")
	optional("org.quartz-scheduler:quartz")
	optional("org.springframework:spring-context-support")
	optional("org.springframework:spring-jdbc")
	optional("org.springframework:spring-messaging")
	optional("org.springframework:spring-webflux")
	optional("org.springframework:spring-web")
	optional("org.springframework:spring-webmvc")
	optional("org.springframework.graphql:spring-graphql")
	optional("org.springframework.data:spring-data-ldap")
	optional("org.springframework.data:spring-data-rest-webmvc")
	optional("org.springframework.security:spring-security-core")
	optional("org.springframework.security:spring-security-web")
	optional("org.springframework.session:spring-session-core")

	testFixturesImplementation(project(":spring-boot-project:spring-boot-autoconfigure"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-http-converter"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-jackson"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-jersey"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-reactor-netty"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-test"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-tomcat"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-webflux"))
	testFixturesImplementation(project(":spring-boot-project:spring-boot-webmvc"))

	testImplementation(project(":spring-boot-project:spring-boot-autoconfigure"))
	testImplementation(project(":spring-boot-project:spring-boot-jackson"))
	testImplementation(project(":spring-boot-project:spring-boot-jersey"))
	testImplementation(project(":spring-boot-project:spring-boot-jsonb"))
	testImplementation(project(":spring-boot-project:spring-boot-reactor-netty"))
	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation("com.squareup.okhttp3:mockwebserver")
	testImplementation("io.micrometer:micrometer-observation-test")
	testImplementation("io.projectreactor:reactor-test")
	testImplementation("io.r2dbc:r2dbc-h2")
	testImplementation("net.minidev:json-smart")
	testImplementation("org.apache.logging.log4j:log4j-to-slf4j")
	testImplementation("org.glassfish.jersey.media:jersey-media-json-jackson")

	testRuntimeOnly(project(":spring-boot-project:spring-boot-http-codec"))
	testRuntimeOnly("ch.qos.logback:logback-classic")
	testRuntimeOnly("io.projectreactor.netty:reactor-netty-http")
	testRuntimeOnly("jakarta.xml.bind:jakarta.xml.bind-api")
	testRuntimeOnly("org.apache.tomcat.embed:tomcat-embed-el")
	testRuntimeOnly("org.glassfish.jersey.ext:jersey-spring6")
	testRuntimeOnly("org.hsqldb:hsqldb")
}
