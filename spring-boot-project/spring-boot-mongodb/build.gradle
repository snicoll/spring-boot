plugins {
	id "java-library"
	id "org.springframework.boot.auto-configuration"
	id "org.springframework.boot.configuration-properties"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.docker-test"
	id "org.springframework.boot.optional-dependencies"
}

description = "Spring Boot MongoDB"

dependencies {
	api(project(":spring-boot-project:spring-boot"))

	optional(project(":spring-boot-project:spring-boot-autoconfigure"))
	optional(project(":spring-boot-project:spring-boot-docker-compose"))
	optional(project(":spring-boot-project:spring-boot-metrics"))
	optional(project(":spring-boot-project:spring-boot-reactor"))
	optional(project(":spring-boot-project:spring-boot-testcontainers"))
	optional("io.netty:netty-transport")
	optional("org.mongodb:mongodb-driver-reactivestreams")
	optional("org.mongodb:mongodb-driver-sync")
	optional("org.testcontainers:mongodb")

	dockerTestImplementation(project(":spring-boot-project:spring-boot-test"))
	dockerTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support-docker"))
	dockerTestImplementation(testFixtures(project(":spring-boot-project:spring-boot-docker-compose")))

	testImplementation(project(":spring-boot-project:spring-boot-test"))
	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation(testFixtures(project(":spring-boot-project:spring-boot-testcontainers")))

	testRuntimeOnly("ch.qos.logback:logback-classic")
	testRuntimeOnly("io.netty:netty-handler")
}
